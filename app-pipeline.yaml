steps:
# Step 1: Build the Docker image and tag it for Artifact Registry (AR).
- name: 'gcr.io/cloud-builders/docker'
  id: Build-Image
  args: [
    'build', 
    '-t', 
    '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO_NAME}/${_SERVICE_NAME}', # Application image path using AR
    '.'
  ]

# Step 2: Push the locally tagged image to the remote Artifact Registry.
- name: 'gcr.io/cloud-builders/docker'
  id: Push-Image
  args: [
    'push',
    '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO_NAME}/${_SERVICE_NAME}'
  ]

# Step 3: Deploy the image to Cloud Run.
- name: 'gcr.io/cloud-builders/gcloud'
  id: Deploy-to-Cloud-Run
  args: [
    'run',
    'deploy',
    '${_SERVICE_NAME}',
    '--image', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO_NAME}/${_SERVICE_NAME}',
    '--region', '${_REGION}',
    '--platform', 'managed',
    '--allow-unauthenticated',
    # --- FIX: Increase memory to 1 GiB (1024 MiB) ---
    '--memory', '2Gi',
    '--set-env-vars',
    # Environment variables for your application
    'PROJECT_ID=$PROJECT_ID,GCS_BUCKET_NAME=${_GCS_BUCKET_NAME},CSV_FILE_NAME=${_CSV_FILE_NAME},EMBEDDINGS_FILE_NAME=processed/embeddings.json,REGION=${_REGION}'
  ]

images:
- '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO_NAME}/${_SERVICE_NAME}'
options:
  # This option prevents the deployment from failing due to IAM policy errors 
  # when using a custom service account for the deployment (Cloud Build SA).
  logging: CLOUD_LOGGING_ONLY